import { useState, useEffect } from 'react';
import io from 'socket.io-client';

const socket = io('http://localhost:3001'); // Connect to your backend server

const Game = () => {
  const [players, setPlayers] = useState([]);
  const [host, setHost] = useState(null);
  const [currentPlayerId, setCurrentPlayerId] = useState('');
  const [question, setQuestion] = useState('Loading question...');
  const [options, setOptions] = useState(['Loading...', 'Loading...', 'Loading...', 'Loading...']);
  const [selectedOption, setSelectedOption] = useState(null);
  const [timeRemaining, setTimeRemaining] = useState(30);

  useEffect(() => {
    const playerName = prompt('Enter your name:'); // Get the player's name
    socket.emit('joinGame', { name: playerName });

    // Handle events from the server
    socket.on('playerJoined', ({ players, host }) => {
      setPlayers(Object.values(players));
      setHost(host);
      setCurrentPlayerId(socket.id);
    });

    socket.on('scoreUpdated', ({ player }) => {
      setPlayers((prevPlayers) =>
        prevPlayers.map((p) => (p.id === player.id ? { ...p, score: player.score } : p)),
      );
    });
  }, []);

  const handleOptionSelect = (option) => {
    setSelectedOption(option);
    // Submit answer and update score if correct
    if (option === 'Correct Answer') {
      socket.emit('updateScore', { playerId: socket.id, score: 10 });
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-black text-white">
      <div className="w-4/5 max-w-3xl bg-gray-900 text-white rounded-lg shadow-lg border-2 border-red-500 p-6">
        <h2 className="text-center text-2xl font-bold text-red-500 mb-6">
          {host === currentPlayerId ? 'You are the Host' : 'Waiting for Host...'}
        </h2>

        {/* Player List */}
        <div className="mb-6">
          <h3 className="text-xl font-bold mb-4">Players:</h3>
          <ul>
            {players.map((player) => (
              <li key={player.id} className="text-lg">
                {player.name} {host === player.id && '(Host)'} - {player.score} pts
              </li>
            ))}
          </ul>
        </div>

        {/* Question and Options */}
        <div className="text-center text-xl font-semibold mb-4">{question}</div>
        <div className="grid grid-cols-1 gap-4">
          {options.map((option, index) => (
            <button
              key={index}
              className="py-2 px-4 border-2 rounded-lg bg-gray-800 text-gray-200 hover:bg-red-500 hover:text-white"
              onClick={() => handleOptionSelect(option)}
            >
              {String.fromCharCode(65 + index)}) {option}
            </button>
          ))}
        </div>

        {/* Timer */}
        <div className="text-center text-xl font-bold mt-4">
          Time Remaining: <span className="text-red-500">{timeRemaining}s</span>
        </div>
      </div>
    </div>
  );
};

export default Game;
